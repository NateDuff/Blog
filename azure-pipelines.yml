trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  YARN_CACHE_FOLDER: $(Pipeline.Workspace)/.yarn

steps:
- powershell: |
   New-Item -Path $(System.DefaultWorkingDirectory) -Name ".env.production" -Force -Value @'   
   firebase_apiKey = $(firebase_apiKey)
   firebase_authDomain = $(firebase_authDomain)
   firebase_databaseURL = $(firebase_databaseURL)
   firebase_projectId = $(firebase_projectId)
   firebase_storageBucket = $(firebase_storageBucket)
   firebase_messagingSenderId = $(firebase_messagingSenderId)
   firebase_appId = $(firebase_appId)
   firebase_publicKey = $(firebase_publicKey)
   appInsightsConnectionString = $(appInsightsConnectionString)   
   firebase_serverKey = $(firebase_serverKey)
   '@
  displayName: 'Create .env configuration file'

- script: yarn install
  displayName: 'Install App'
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))

- script: yarn build
  displayName: 'Build'
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  timeoutInMinutes: 4

- script: yarn build
  displayName: 'Build Retry'
  condition: and(failed(), ne(variables['Build.Reason'], 'PullRequest'))
  timeoutInMinutes: 4

- powershell: |
    $swPath = "./public/sw.js"
    $content = Get-Content $swPath -Raw
    $content = $content.Replace("`${process.env.firebase_messagingSenderId}", $ENV:firebase_messagingSenderId)
    Set-Content $swPath -Value $content -Verbose
  displayName: 'Manual token replacement'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: 'public'
    ArtifactName: 'drop'
    publishLocation: 'Container'
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
